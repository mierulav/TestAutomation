'***********************************************************
' Module		: Connect Checkout 
' Created by	: amirul.saddam@dksh.com
' Last modified	: 27-4-2021
' Modified by	: amirul.saddam@dksh.com

'***********************************************************
OPTION EXPLICIT

	
	Public CheckoutPage : Set CheckoutPage = Browser("DKSH Connect").Page("Checkout")
	Public OrderConfirmationPage : Set OrderConfirmationPage = Browser("DKSH Connect").Page("Order Confirmation")
	'Checkout screen
	Public COProductName : Set COProductName = CheckoutPage.WebElement("Checkout-ProductName")
	Public COProductCode : Set COProductCode = CheckoutPage.WebElement("Checkout-ProductCode")
	Public COShipToAddress : Set COShipToAddress = CheckoutPage.WebElement("Checkout-ShipToAddress")
	Public CODeliveryInstruction : Set CODeliveryInstruction = CheckoutPage.WebEdit("Checkout-DeliveryInstruction")
	Public COPONumber : Set COPONumber = CheckoutPage.WebEdit("Checkout-PONumber")
	Public COCheckboxDisclaimer : Set COCheckboxDisclaimer = CheckoutPage.WebElement("Checkout-CheckboxDisclaimer")
	Public COPlaceOrder : Set COPlaceOrder = CheckoutPage.WebButton("Checkout-PlaceOrder")
	Public COUseThisPayer : Set COUseThisPayer = CheckoutPage.WebButton("Checkout-UseThisPayer")
	Public COProductDiscount : Set COProductDiscount = CheckoutPage.WebElement("Checkout-ProductDiscount")
	Public COProductDiscountTH : Set COProductDiscountTH = CheckoutPage.WebElement("Checkout-ProductDiscount-TH")
	Public COCashDiscountTW : Set COCashDiscountTW = CheckoutPage.WebElement("Checkout-ProductDiscount-TW")
	Public COSubtotal : Set COSubtotal = CheckoutPage.WebElement("Checkout-Subtotal")
	Public COSubtotal2 : Set COSubtotal2 = CheckoutPage.WebElement("Checkout-Subtotal-KH")
	Public COSubtotalTH : Set COSubtotalTH = CheckoutPage.WebElement("Checkout-Subtotal-TH")
	Public COTotal : Set COTotal = CheckoutPage.WebElement("Checkout-Total")
	Public COTotalBeforeVAT : Set COTotalBeforeVAT = CheckoutPage.WebElement("Checkout-TotalBeforeVAT")
	Public COVATCollected : Set COVATCollected = CheckoutPage.WebElement("Checkout-VATCollected")
	Public COFreightCharge : Set COFreightCharge = CheckoutPage.WebElement("Checkout-FreightCharge")
	Public OOSProceedAgreement : Set OOSProceedAgreement = CheckoutPage.WebList("Checkout-OOSProceedAgreement")
	Public COTotalIncludeVAT : Set COTotalIncludeVAT = CheckoutPage.WebElement("Checkout-TotalIncludeVAT")
	'Order Confirmation
	Public AlertOrderSuccess : Set AlertOrderSuccess = OrderConfirmationPage.WebElement("Checkout-Thank you for your Order!")
	Public OrderNumber : Set OrderNumber = OrderConfirmationPage.Link("Checkout-OrderNumber")
	Public OrderNumberMessage : Set OrderNumberMessage = OrderConfirmationPage.WebElement("Checkout-Your order number is")

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' Simple operations
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'==================================================================
'Function to get Checkout's Sub Total
'==================================================================

 Public Function Checkout_GetSubtotal()
 	
  	Select Case ProjectName
 		
 		Case "KHHEC"
 			COSubtotal2.RefreshObject
  			COSubtotal2.WaitProperty "visible", true , 3000
		  	Checkout_GetSubtotal = Csng(Trim(GetNumber(Replace(COSubtotal2.GetROProperty("Innertext"), "(1)", ""))))
		  	
 		Case "THHEC"
 			COSubtotalTH.RefreshObject
 			COSubtotalTH.WaitProperty "visible", true, 3000 
  			Checkout_GetSubtotal = Csng(Trim(GetNumber(COSubtotalTH.GetROProperty("Innertext"))))
  			
 		Case Else
 			COSubtotal.RefreshObject
 			COSubtotal.WaitProperty "visible", true, 3000 
  			Checkout_GetSubtotal = Csng(Trim(GetNumber(COSubtotal.GetROProperty("Innertext"))))
  			 	
	End Select
 	
 	
 End Function
 
'==================================================================
'Function to get Checkout's Total
'==================================================================

 Public Function Checkout_GetTotal()
 	
 	COTotal.RefreshObject
 	COTotal.WaitProperty "visible", true, 3000 
 	Checkout_GetTotal = CSng(Trim(GetNumber(COTotal.GetROProperty("Innertext")))) 	
 	
 	
 End Function

'==================================================================
'Function to get Checkout's Product discount
'==================================================================

 Public Function Checkout_GetTotalDiscount()
 
 	Select Case ProjectName
 		Case  "THHEC"
 			COProductDiscountTH.RefreshObject
	 		COProductDiscountTH.WaitProperty "visible", True, 3000 
	 		Checkout_GetTotalDiscount = Csng(Trim(GetNumber(COProductDiscountTH.GetROProperty("Innertext"))))
		Case  "TWHEC"
	 			COCashDiscountTW.RefreshObject
		 		COCashDiscountTW.WaitProperty "visible", True, 3000 
		 		Checkout_GetTotalDiscount = Csng(Trim(GetNumber(COCashDiscountTW.GetROProperty("Innertext")))) 		 		
	 	Case Else
	 		COProductDiscount.RefreshObject
		 	COProductDiscount.WaitProperty "visible", true, 3000 
		 	Checkout_GetTotalDiscount = Csng(Trim(GetNumber(COProductDiscount.GetROProperty("Innertext")))) 	
 	End Select
 	
 End Function
 
 '==================================================================
'Function to get Checkout Product freight charge
'==================================================================

 Public Function Checkout_GetFreightCharge()
 
 	Select Case ProjectName
 		Case "MMHEC", "KHHEC", "VNHEC", "THHEC", "TWHEC"
 			Checkout_GetFreightCharge = 0
 		
 		Case Else
 			COFreightCharge.RefreshObject
 		 	COFreightCharge.WaitProperty "visible", true, 3000 
 			Checkout_GetFreightCharge = Csng(Trim(GetNumber(COFreightCharge.GetROProperty("Innertext"))))
 	End Select 	
 	
 End Function
 
'==================================================================
'Function to get checkout Total before VAT
'==================================================================

 Public Function Checkout_GetTotalBeforeVAT()
 
 	Select Case ProjectName
 		
		Case "MMHEC"	
			Checkout_GetTotalBeforeVAT = Checkout_GetTotalIncudeVAT
			
		Case "THHEC", "TWHEC"
			Checkout_GetTotalBeforeVAT = 0
			
		Case Else
			COTotalBeforeVAT.RefreshObject
			COTotalBeforeVAT.WaitProperty "visible", true, 3000 
 			Checkout_GetTotalBeforeVAT = Csng(Trim(GetNumber(COTotalBeforeVAT.GetROProperty("Innertext"))))
 			
 	End Select
 	
 	
 End Function
 
  '==================================================================
'Function to get checkout's Total include tax - for MMH
'==================================================================

 Public Function Checkout_GetTotalIncudeVAT()
 
 	COTotalIncludeVAT.RefreshObject
 	COTotalIncludeVAT.WaitProperty "visible", true, 3000 
 	Checkout_GetTotalIncudeVAT = Csng(Trim(GetNumber(COTotalIncludeVAT.GetROProperty("Innertext"))))
 	
 End Function
 
'==================================================================
'Function to get checkouts VAT Collected
'==================================================================

 Public Function Checkout_GetVATCollected()
 
	Select Case ProjectName
		
		Case "KHHEC"
			COVATCollected.RefreshObject
			COVATCollected.WaitProperty "visible", true, 3000 
 			Checkout_GetVATCollected = Csng(GetNumber(Replace(Trim(COVATCollected.GetROProperty("innertext")), "VAT (10%)", "VAT")))
 			
 		Case "THHEC", "TWHEC"
 			Checkout_GetVATCollected = 0
 			
		Case Else
			COVATCollected.RefreshObject
			COVATCollected.WaitProperty "visible", true, 3000 
	 		Checkout_GetVATCollected = CSng(Trim(GetNumber(COVATCollected.GetROProperty("Innertext")))) 
		
	End Select 
 	 	
 End Function
 
 '==================================================================
'Function to the check Calculated VAT
'==================================================================

Public Function Checkout_CalculatedVATCollected()

	Dim fVATCollected, fCalc
	fVATCollected = Checkout_GetVATCollected
	
	Select Case ProjectName
		Case "KHHEC"
			fCalc = Round((Checkout_GetSubtotal - Checkout_GetTotalDiscount - fVATCollected) * (10/100), 2)
			
		Case "SGHEC", "SGCG"
			fCalc = Round((Checkout_GetSubtotal - Checkout_GetTotalDiscount) * (7/100), 2)
			
		Case "AUTEC"
			fCalc = Round((Checkout_GetSubtotal - Checkout_GetTotalDiscount) * (10/100), 2)
			
		Case "VNHEC"
			fCalc = fVATCollected 'Due to vnhec tax is not the same for everyproduct
			
		Case "MYHEC", "MMHEC"
			fCalc = Round((Checkout_GetSubtotal - Checkout_GetTotalDiscount + fVATCollected) * (0/100), 2)
			
		Case "THHEC", "TWHEC"
			fCalc = 0
			
	End Select
	
	If fVATCollected = fCalc Then
		Checkout_CalculatedVATCollected = True	
	Else
		Checkout_CalculatedVATCollected = False
	End If 
	
End Function
 
'==================================================================
'Function to the check total before vat calculation 
'==================================================================

Public Function Checkout_CalculatedTotalBeforeVAT()

	Dim fTotalBeforeVAT, fCalc
	fTotalBeforeVAT = Checkout_GetTotalBeforeVAT
	
	Select Case ProjectName
			
		Case "THHEC", "TWHEC"
			fCalc = 0
		
		Case "AUTEC"
			fCalc = Round(Checkout_GetSubtotal - Checkout_GetTotalDiscount, 2)
			
		Case "SGCG", "SGHEC"
			fCalc = Round(Checkout_GetSubtotal - Checkout_GetTotalDiscount, 2)
			
		Case "VNHEC"
			fCalc = Round(Checkout_GetSubtotal - Checkout_GetTotalDiscount, 2)
			
		Case Else
			fCalc = Round(Checkout_GetSubtotal - Checkout_GetTotalDiscount - Checkout_GetVATCollected, 2)
			
	End Select
	
	If fTotalBeforeVAT = fCalc Then
		Checkout_CalculatedTotalBeforeVAT = True	
	Else
		Checkout_CalculatedTotalBeforeVAT = False
	End If 
	
End Function

'==================================================================
'Function to check order total
'==================================================================

Public Function Checkout_CalculatedTotal()
	
	Dim fTotal : fTotal = Checkout_GetTotal
	Dim fSum
	
	Select Case ProjectName
		
		Case "MMHEC"
			fSum = Round(Checkout_GetTotalBeforeVAT, 2)
			
		Case "SGHEC", "SGCG"
			fSum = Round(Checkout_GetTotalBeforeVAT + Checkout_GetVATCollected + Checkout_GetFreightCharge, 2)
		
		Case "VNHEC"
			fSum = Round(Checkout_GetTotalBeforeVAT + Checkout_GetVATCollected + Checkout_GetFreightCharge, 2)
			
		Case "THHEC", "TWHEC"
			fSum = Round(Checkout_GetSubtotal - Checkout_GetTotalDiscount, 2)
		
		Case Else
			fSum = Round(Checkout_GetTotalBeforeVAT + Checkout_GetVATCollected + Checkout_GetFreightCharge, 2)
			
	End Select
	
	If fSum = fTotal Then
		Checkout_CalculatedTotal = True	
	Else
		Checkout_CalculatedTotal = False
	End If
	
End Function

'==================================================================
'Function to get Product Name
'==================================================================

 Public Function Checkout_GetProductName()
 
 	COProductName.RefreshObject
 	COProductName.WaitProperty "Visible", True
 	Checkout_GetProductName = Trim(COProductName.GetROProperty("innertext"))
 	
 End Function
 
'==================================================================
'Function to get Product Code
'==================================================================

 Public Function Checkout_GetProductCode()
 
 	COProductCode.RefreshObject
 	COProductCode.WaitProperty "Visible", True, 3000
 	Checkout_GetProductCode = Trim(COProductCode.GetROProperty("Innertext"))
 	
 End Function
 
 '==================================================================
'Function to get ShiptO Address
'==================================================================

 Public Function Checkout_GetShipToAddress()
 
 	COShipToAddress.RefreshObject
 	COShipToAddress.WaitProperty "Visible", True, 3000
 	Checkout_GetShipToAddress = Trim(Replace(COShipToAddress.GetROProperty("Innertext"), ",", ""))
 	
 End Function
 
'==================================================================
'Function to Set Delivery Instruction
'==================================================================

 Public Sub SetDeliveryInstruction(strVal)
 
 	CODeliveryInstruction.RefreshObject
 	CODeliveryInstruction.WaitProperty "Visible", True, 3000
 	CODeliveryInstruction.Set strVal
 	 	
 End Sub
 
'==================================================================
'Function to Set PO number
'==================================================================

 Public Sub SetPONumber(strVal)
 
 	COPONumber.RefreshObject
 	COPONumber.WaitProperty "Visible", True, 3000
 	COPONumber.Set strVal
 	 	
 End Sub
 
'==================================================================
'Function to Set PO number
'==================================================================

 Public Sub SetCheckboxDisclaimer()
 
 	COCheckboxDisclaimer.RefreshObject
 	If Lcase(COCheckboxDisclaimer.GetROProperty("Class")) <> "check active" Then
 		COCheckboxDisclaimer.Click
 	End If
  	 	
 End Sub
  
'==================================================================
'Function to Submit order
'==================================================================

Public Sub SubmitOrder()
	
	COPlaceOrder.RefreshObject
	OrderConfirmationPage.RefreshObject
	COPlaceOrder.WaitProperty "Visible", True
	COPlaceOrder.Click
	OrderConfirmationPage.Sync
	OrderConfirmationPage.RefreshObject
	AlertOrderSuccess.RefreshObject
	AlertOrderSuccess.WaitProperty "Visible", True

End Sub


'==================================================================
'Function to get the Order Number 
'==================================================================

Public Function GetOrderNumber()

	OrderNumber.RefreshObject
	OrderNumber.WaitProperty "Visible", True
	If OrderNumber.Exist Then
		GetOrderNumber = Trim(OrderNumber.GetROProperty("innertext"))
		Exit Function
	End If 
	GetOrderNumber = False
	
End Function

'==================================================================
'Function to select OOS proceeding agreement
'==================================================================

Public Sub SelectOOSProceedingAgreement(strVal)
	
	OOSProceedAgreement.RefreshObject
	Select Case Lcase(strVal)
		
		Case "agree"
			OOSProceedAgreement.Select "#1"
		
		Case "not agree"
			OOSProceedAgreement.Select "#2"
		
		Case Else
			OOSProceedAgreement.Select "#1"
			
	End Select
	
End Sub

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' Validation Checkouts
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'==================================================================
'Function to validate Checkout screen layout
'==================================================================

Public Function CheckCheckoutObjects()

	
	Dim DicObj, i, x, k
	
	Set DicObj = CreateObject("Scripting.Dictionary")
	
	CheckoutPage.Sync
	CheckoutPage.RefreshObject
	
	DicObj.Add "COProductName", COProductName.Exist
	DicObj.Add "COProductCode", COProductCode.Exist(1)
	DicObj.Add "COShipToAddress", COShipToAddress.Exist(1)
	DicObj.Add "COCheckboxDisclaimer", COCheckboxDisclaimer.Exist(1)
	DicObj.Add "COPlaceOrder", COPlaceOrder.Exist(1)
	
	Select Case ProjectName
		Case "VNHEC"
			DicObj.Add "CODeliveryInstruction", Not CODeliveryInstruction.Exist(1)
			
		Case "MMHEC"
			DicObj.Add "OOSProceedAgreement", Not OOSProceedAgreement.Exist(1)
		
		Case Else
			DicObj.Add "CODeliveryInstruction", CODeliveryInstruction.Exist(1)
	End Select
	
	i = DicObj.Items
	k = DicObj.Keys
	
	For x = 0 To DicObj.Count-1
		'print k(x) & ", " & i(x)
		If i(x) <> True Then
			CheckCheckoutObjects = False
			Exit For
		End If
		CheckCheckoutObjects = True
	Next
	
	Set DicObj = nothing
	
End Function

'==================================================================
'Function to validate Checkout screen layout
'==================================================================

Public Function CheckCheckoutCalculationSummaryObjects()

	Dim DicObj, i, x, k
	
	Set DicObj = CreateObject("Scripting.Dictionary")
	
	CheckoutPage.Sync
	CheckoutPage.RefreshObject
	
	Select Case ProjectName
		
		Case "KHHEC"			
			DicObj.Add "Total", COTotal.Exist
			DicObj.Add "TotalBeforeVAT", COTotalBeforeVAT.Exist(1)
			DicObj.Add "VATCollected", COVATCollected.Exist(1)
			DicObj.Add "ProductDiscount", COProductDiscount.Exist(1)
			DicObj.Add "Subtotal2", COSubtotal2.Exist(1)
			
		Case "AUTEC", "MYHEC"			
			DicObj.Add "Total", COTotal.Exist
			DicObj.Add "TotalBeforeVAT", COTotalBeforeVAT.Exist(1)
			DicObj.Add "VATCollected", COVATCollected.Exist(1)
			DicObj.Add "ProductDiscount", COProductDiscount.Exist(1)
			DicObj.Add "Subtotal", COSubtotal.Exist(1)
			DicObj.Add "FreightCharge", COFreightCharge.Exist(1)
			
		Case "MMHEC"
			DicObj.Add "Total", COTotal.Exist
			DicObj.Add "TotalIncludeVAT", COTotalIncludeVAT.Exist(1)
			DicObj.Add "VATCollected", COVATCollected.Exist(1)
			DicObj.Add "ProductDiscount", COProductDiscount.Exist(1)
			DicObj.Add "Subtotal", COSubtotal.Exist(1)
			
		Case "THHEC"
			DicObj.Add "Subtotal", COSubtotal.Exist
			DicObj.Add "ProductDiscount", COProductDiscountTH.Exist(1)
			DicObj.Add "Total", COTotal.Exist(1)
		
		Case "TWHEC"
			DicObj.Add "Subtotal", COSubtotal.Exist
			DicObj.Add "CashDiscount", COCashDiscountTW.Exist(1)
			DicObj.Add "Total", COTotal.Exist(1)
	
		Case Else
			DicObj.Add "Total", COTotal.Exist
			DicObj.Add "TotalBeforeVAT", COTotalBeforeVAT.Exist(1)
			DicObj.Add "VATCollected", COVATCollected.Exist(1)
			DicObj.Add "ProductDiscount", COProductDiscount.Exist(1)
			DicObj.Add "Subtotal", COSubtotal.Exist(1)
			
	End Select
	
	i = DicObj.Items
	k = DicObj.Keys
		
	For x = 0 To DicObj.Count-1
		'print k(x) & ", " & i(x)
		If i(x) <> "True" Then
			CheckCheckoutCalculationSummaryObjects = False
			Exit For
		End If
		CheckCheckoutCalculationSummaryObjects = True
	Next
	
	Set DicObj = nothing
	
End Function

'==================================================================
'Function to check order total
'==================================================================

Public Function Checkout_CheckCalculationSummary()

	Dim objDic : Set objDic = CreateOBject("Scripting.Dictionary")
	Dim i, k, x
	
	objDic.Add "TotalBeforeVAT", Checkout_CalculatedTotalBeforeVAT
	objDic.Add "VATCollected", Checkout_CalculatedVATCollected
	objDic.Add "Total", Checkout_CalculatedTotal
	
	i = objDic.Items
	k = objDic.Keys
	
	For x = 0 To objDic.Count-1
		'print k(x) & ", " & i(x)
		If i(x) <> True Then
			Checkout_CheckCalculationSummary = False
			Exit For
		End If
		Checkout_CheckCalculationSummary = True
	Next
	
	Set objDic = nothing
	
End Function
 
'==================================================================
'Function to check order total
'==================================================================

Public Function CheckOrderDetails(strProductCode, strProductName, strShipToAddress)

	Dim i, k, x
	Dim objDic : Set objDic = CreateOBject("Scripting.Dictionary")	
	
	objDic.Add "Product Name", IsContain(Checkout_GetProductName, strProductName)
	objDic.Add "Product Code", IsContain(Checkout_GetProductCode, strProductCode)
	objDic.Add "Ship To Address", IsContain(Lcase(Checkout_GetShipToAddress), Lcase(strShipToAddress))
	
	i = objDic.Items
	k = objDic.Keys
	
	For x = 0 To objDic.Count-1
		'print k(x) & ", " & i(x)
		If i(x) <> True Then
			CheckOrderDetails = False
			Exit For
		End If
		CheckOrderDetails = True
	Next
	
	Set objDic = nothing
	
End Function

'==================================================================
'Function to check order total
'==================================================================

Public Function CheckSalesOrderConfirmed()

	Dim i, k, x
	Dim objDic : Set objDic = CreateOBject("Scripting.Dictionary")	
	
	OrderConfirmationPage.Sync
	OrderConfirmationPage.RefreshObject
	
	objDic.Add "AlertOrderSuccess", AlertOrderSuccess.Exist(1)
	objDic.Add "OrderNumber", OrderNumber.Exist(1)
	objDic.Add "OrderNumberMessage", OrderNumberMessage.Exist(1)
	
	i = objDic.Items
	k = objDic.Keys
	
	For x = 0 To objDic.Count-1
		'print k(x) & ", " & i(x)
		If i(x) <> True Then
			CheckSalesOrderConfirmed = False
			Exit For
		End If
		CheckSalesOrderConfirmed = True
	Next
	
	Set objDic = nothing
	
End Function
